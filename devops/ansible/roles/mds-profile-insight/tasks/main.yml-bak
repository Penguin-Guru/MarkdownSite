---
- name: Update all packages to their latest version
  apt:
    name: "*"
    state: latest
    update_cache: yes

- name: Install packages
  apt:
    name: [
      'git',
      'build-essential',
      'adduser',
      'libfontconfig',
      'git',
      'nginx',
      'python3-cairo',
      'python3-cairocffi',
      'python3-django',
      'python3-pyparsing',
      'python3-memcache',
      'python3-ldap',
      'python3-whitenoise',
      'python3-django-tagging',
      'python3-twisted',
      'uwsgi-plugin-python3',
      'uwsgi',
    ]
    state: present

- name: Create graphite user
  user:
    name: graphite
    shell: /bin/bash
    comment: User for graphite/carbon/whipser.

- include_tasks: graphite-web.yml

- include_tasks: carbon-whisper.yml

- include_tasks: grafana.yml


- name: "Install /opt/graphite/conf/carbon.conf"
  copy:
    dest: "/opt/graphite/conf/carbon.conf"
    src: "{{ role_path }}/files/graphite/carbon.conf"
    owner: root
    group: root
    mode: 0644

- name: "Add the carbon.service file."
  copy:
    dest: "/etc/systemd/system/carbon.service"
    src: "{{ role_path }}/files/carbon.service"
    owner: root
    group: root
    mode: 0644

- name: "Install /opt/graphite/conf/storage-schemas.conf"
  copy:
    dest: "/opt/graphite/conf/storage-schemas.conf"
    src: "{{ role_path }}/files/graphite/storage-schemas.conf"
    owner: root
    group: root
    mode: 0644

- name: "Install /opt/graphite/webapp/graphite-web.py"
  copy:
    dest: "/opt/graphite/webapp/graphite-web.py"
    src: "{{ role_path }}/files/graphite/graphite-web.py"
    owner: root
    group: root
    mode: 0755

- name: "Install /etc/uwsgi/apps-available/graphite.ini"
  copy:
    dest: "/etc/uwsgi/apps-available/graphite.ini"
    src: "{{ role_path }}/files/uwsgi/graphite.ini"
    owner: root
    group: root
    mode: 0644

- name: "Install /etc/nginx/sites-available/{{ config.grafana.domain }}.conf"
  copy:
    dest: "/etc/nginx/sites-available/{{ config.grafana.domain }}.conf"
    src: "{{ role_path }}/files/nginx/grafana.conf"
    owner: root
    group: root
    mode: 0644

- name: "Install /etc/nginx/sites-available/{{ config.graphite.domain }}.conf"
  copy:
    dest: "/etc/nginx/sites-available/{{ config.graphite.domain }}.conf"
    src: "{{ role_path }}/files/nginx/graphite.conf"
    owner: root
    group: root
    mode: 0644

- name: Graphite user to own /opt/graphite/storage/whisper
  file:
    state: touch
    path: /etc/nginx/auth.basic
    owner: root
    group: root
    mode: 0644

- name: "Add users to /etc/nginx/auth.basic"
  lineinfile:
    path: /etc/nginx/auth.basic
    line: "{{ item }}"
    owner: root
    group: root
    mode: '0644'
  with_items: "{{ config.insight.basic_auth }}"

- name: "Install /opt/graphite/webapp/graphite/local_settings.py"
  template:
    src: "{{ role_path }}/templates/local_settings.py.j2"
    dest: /opt/graphite/webapp/graphite/local_settings.py
    owner: root
    group: root
    mode: 0644

- name: "Install /etc/grafana/grafana.ini"
  template:
    src: "{{ role_path }}/templates/grafana.ini.j2"
    dest: /etc/grafana/grafana.ini
    owner: root
    group: root
    mode: 0644

- name: "Create symlink for nginx domain: {{ config.graphite.domain }}"
  file:
    state: link
    path: "/etc/nginx/sites-enabled/{{ config.graphite.domain }}.conf"
    src: "/etc/nginx/sites-available/{{ config.graphite.domain }}.conf"

- name: "Create symlink for nginx domain: {{ config.grafana.domain }}"
  file:
    state: link
    path: "/etc/nginx/sites-enabled/{{ config.grafana.domain }}.conf"
    src: "/etc/nginx/sites-available/{{ config.grafana.domain }}.conf"

- name: "Create symlink for uwsgi graphite config"
  file:
    state: link
    path: /etc/uwsgi/apps-enabled/graphite.ini 
    src: /etc/uwsgi/apps-available/graphite.ini

- name: Setup the database.
  shell: django-admin migrate --settings=graphite.settings > /opt/graphite/.db_init_done
  environment:
    PYTHONPATH: /opt/graphite/webapp
  args:
    creates: /opt/graphite/.db_init_done

- name: Ensure permissions on /opt/graphite/storage/
  shell: chown -R graphite:graphite /opt/graphite/storage/

- name: Start & Enable uwsgi (graphite-web)
  service:
    name: uwsgi
    enabled: true
    state: restarted

- name: Start & Enable grafana
  service:
    name: grafana-server
    enabled: true
    state: restarted

- name: Start & Enable nginx
  service:
    name: nginx
    enabled: true
    state: restarted

- name: Start & Enable carbon
  service:
    name: nginx
    enabled: true
    state: restarted

- include_tasks: collectd.yml

# To create a user for onself, use the following command:
#
# PYTHONPATH=/opt/graphite/webapp django-admin createsuperuser --settings=graphite.settings
# 
# You will be prompted to enter a username/email/password combination that can be used for login.

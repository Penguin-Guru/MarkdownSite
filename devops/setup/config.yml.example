# Package Source Configuration
#
# MarkdownSite modules will be installed from these URLs.
pkg:
  cgi:        https://pkgs.markdownsite.com/MarkdownSite-CGI-0.003.tar.gz
  manager:    https://pkgs.markdownsite.com/MarkdownSite-Manager-0.001.tar.gz
  manager_db: https://pkgs.markdownsite.com/MarkdownSite-Manager-DB-1.tar.gz

# Database Configuration
#
# This block is used to configure the PSQL database
#
# - Panel Server -
# 
# Postgresql is installed and configured on the Panel server,
# the values here are used to create that and configure the database
# itself.
#
# bind: is used as the IP address for PostgreSQL to listen to. It should
#      exist on the panel server.
#
# markdown: is the DB credentials - on Panel this creates a DB in PSQL,
#           and configures it with this user/pass combination. On other
#           servers this information is stored as connection credentials.
#
# minion:   is the same as markdown, but for the minion database.
#
# allow_addresses: is a list of addresses to allow connections to
#                  the postgresql database.  Any node that wants to
#                  connect must have its IP address declared here.
database:
  bind: x.x.x.x
  allow_addresses:
    - address: x.x.x.x
    - address: x.x.x.x
  markdownsite:
    user: manager
    pass: SomeSecurePasswordThatIsSuperSecret
    host: x.x.x.x
    name: markdownsite
  minion:
    user: manager
    pass: SomeSecurePasswordThatIsSuperSecret
    host: x.x.x.x
    name: minion

# Panel Configuration
#
# The panel server runs the software for managing sites. This
# is the web interface for adding repositories, and the
# PSQL database that is the source of truth.
#
# domain: is used to tell configure the domain the panel
#         is using
panel:
  domain: my-prod.com
  domain_for_users: my-prod.net
  use_plausible: 0
  markdownsite_repo: git@github.com:symkat/MarkdownSite.git

# Build Server Configuration
# 
# deploy_addresses: is a list if addresses to interact with
#                   lighty for serving websites.  This should
#                   map to the list of web servers.
#
build:
  deploy_addresses:
    - x.x.x.x
    - x.x.x.x

# Insight Server Configuration
#
# basic_auth: is used for .htaccess authentication to
# graphite.  You should have a user for normal access,
# and one that can be used by grafana.
#
# collectd_auth: is a list of user/pass combination for
# the collectd network plugin.  These will be used to
# encrypt and sign metrics data so that machines may
# send data to the insight server, and the insight
# server will only accept valid traffic.
#
# graphite: contains configuration for graphite,
# the secret_key should be set to a long random string,
# and the domain will be used for nginx configu.
#
# grafana: contains configuration for grafana, right now
# this is only the domain you would nginx configured to
# listen on.
#
#
insight:
  basic_auth: 
    - 'admin:$apr1$Kdf5CUsG$7Oa30.pZC4bsE6FqeIZ3E/'
    - 'grafana:$apr1$Kdf5CUsG$7Oa30.pZC4bsE6FqeIZ3E/'
  collectd_auth:
    - 'webserver: VerySecurePlainTextPassword'
    - 'build: VerySecurePlainTextPassword'
    - 'panel: VerySecurePlainTextPassword'
  graphite:
    secret_key: xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
    domain: graphite.YourProd.com
  grafana:
    domain: grafana.YourProd.com

# SSH Keys
#
# These keys are used for access to repos for cloning (The deploy_ keys)
# and for access between the build and webservers for ansible deployment
# (The ansible_ keys).  Please generate keys with ssh-keygen -t rsa -b 4096
# and don't include a passphrase.  The public deploy key will be exposed at
# the panel.domain.tld/sshkey.txt for folks to copy.
sshkeys:
  ansible_private: |
    -----BEGIN OPENSSH PRIVATE KEY-----
    b3BlbnNzaC1rZXktdjEAAAAABG5vbmUAAAAEbm9uZQAAAAAAAAABAAACFwAAAAdzc2gtcn
    ....
    ....
    hSdyoT/5WMuBAAAAGE1hcmtkb3duU2l0ZSBBbnNpYmxlIEtleQEC
    -----END OPENSSH PRIVATE KEY-----

  deploy_private: |
    -----BEGIN OPENSSH PRIVATE KEY-----
    b3BlbnNzaC1rZXktdjEAAAAABG5vbmUAAAAEbm9uZQAAAAAAAAABAAACFwAAAAdzc2gtcn
    ....
    ....
    qr2rSD3JIsfPAAAAF01hcmtkb3duU2l0ZSBBY2Nlc3MgS2V5AQID
    -----END OPENSSH PRIVATE KEY-----

  ansible_public: "ssh-rsa AAAAB3NvfDnnoLOG== MarkdownSite Ansible Key"
  deploy_public: "ssh-rsa AAAAyH+DK0DdZU== MarkdownSite Access Key"

